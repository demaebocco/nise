"use strict";angular.module("niseApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"vm"}).when("/device/:deviceName",{templateUrl:"views/device.html",controller:"DeviceCtrl",controllerAs:"vm"}).otherwise({redirectTo:"/"})}]),angular.module("niseApp").controller("MainCtrl",["$location","$route",function(a,b){var c=this;c.deviceName="",c.enterDevice=function(){var d="/device/"+c.deviceName;a.path(d),b.reload()}}]),angular.module("niseApp").controller("DeviceCtrl",["$routeParams","milkCocoaFactory","messageServiceFactory",function(a,b,c){var d=this,e=a.deviceName;console.log(e);var f=c.get(e);d.message="",d.messages=f.get(),d.send=function(){f.send(d.message),d.message=""}}]),angular.module("niseApp").factory("milkCocoaFactory",function(){var a=new MilkCocoa("hotif8ab67j.mlkcca.com");return{getDatastore:function(b){return a.dataStore("nise/"+b)}}}),angular.module("niseApp").factory("messageServiceFactory",["$rootScope","milkCocoaFactory","senderId",function(a,b,c){var d=function(d){var e=this.dataStore_=b.getDatastore(d),f=this.messages_=[];f.deviceName=d,e.on("send",function(b){var d={text:b.value.text,sender:b.value.sender,mine:b.value.sender===c};a.$apply(function(){f.unshift(d)})})};return d.prototype.getDevice=function(){return this.deviceName},d.prototype.get=function(){return this.messages_},d.prototype.send=function(a){var b={text:a,sender:c};this.dataStore_.send(b)},{get:function(a){return new d(a)}}}]),angular.module("niseApp").factory("senderId",function(){return sha1(Math.random().toString()).substr(0,8)}),angular.module("niseApp").run(["$templateCache",function(a){a.put("views/device.html",'<div> <h3>{{vm.messages.deviceName}}</h3> <form name="message" ng-submit="vm.send()"> <div class="input-group"> <input type="text" name="message" class="form-control" required ng-model="vm.message" placeholder="メッセージを入力してください"> <span class="input-group-btn"> <button type="submit" class="btn btn-primary">投稿</button> </span> </div> </form> <div class="list-group"> <div class="list-group-item" ng-class="{\'list-group-item-success\': message.mine}" ng-repeat="message in vm.messages"> {{message.text}} <span ng-show="message.mine">(あなたの投稿)</span> </div> </div> </div>'),a.put("views/main.html",'<div class="container"> <article> <h4>ニセ Bocco</h4> <p> Bocco や電話注文を受け付ける店舗の偽の実装です。DemaeBocco から届いたメッセージがテキストのまま表示されます。返答はテキストボックスに入力してください。応答性がいいため、システムのテストの時に効果を発揮します。 </p> <p> デバイス名は、Bocco の場合は # で、店舗の場合は @ とするルールでおねがいします。 </p> <ul> <li><a href="#/device/%23Bocco%E3%81%95%E3%81%8F%E3%82%89%E3%83%8F%E3%82%A6%E3%82%B9">#Boccoさくらハウス</a></li> <li><a href="#/device/%23Bocco%E6%94%BF%E5%80%89">#Bocco政倉</a></li> <li><a href="#/device/%23Bocco%E5%8F%A4%E5%B7%9D">#Bocco古川</a></li> <li><a href="#/device/%23Bocco%E3%81%BE%E3%81%95%E3%81%8F%E3%82%89">#Bocco平崎</a></li> <li><a href="#/device/%23Bocco%E3%81%BE%E3%81%95%E3%81%8F%E3%82%89">#Bocco中窪</a></li> <li><a href="#/device/@%E9%8A%80%E3%81%AE%E3%81%95%E3%82%89%E5%AE%87%E5%AE%BF%E5%BA%97">@銀のさら宇宿店</a> </li></ul> </article> <form name="device" ng-submit="vm.enterDevice()"> <div class="input-group"> <input type="text" class="form-control" required ng-model="vm.deviceName" placeholder="利用するデバイス名を入力してください"> <span class="input-group-btn"> <button type="submit" class="btn btn-primary">入室</button> </span> </div> </form> </div>')}]);